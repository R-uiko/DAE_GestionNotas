<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="dbGestionNotasDataSet6" targetNamespace="http://tempuri.org/dbGestionNotasDataSet6.xsd" xmlns:mstns="http://tempuri.org/dbGestionNotasDataSet6.xsd" xmlns="http://tempuri.org/dbGestionNotasDataSet6.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="dbGestionNotasConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="dbGestionNotasConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.WindowsFormsApp1.Properties.Settings.GlobalReference.Default.dbGestionNotasConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="GradoTableAdapter" GeneratorDataComponentClassName="GradoTableAdapter" Name="Grado" UserDataComponentName="GradoTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="dbGestionNotasConnectionString (Settings)" DbObjectName="dbGestionNotas.dbo.Grado" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Grado] WHERE (([idGrado] = @Original_idGrado) AND ([idSeccion] = @Original_idSeccion) AND ([anioCurso] = @Original_anioCurso) AND ([aula] = @Original_aula))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_idGrado" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idGrado" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_idSeccion" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idSeccion" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@Original_anioCurso" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="anioCurso" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_aula" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="aula" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Grado] ([idSeccion], [anioCurso], [aula]) VALUES (@idSeccion, @anioCurso, @aula);
SELECT idGrado, idSeccion, anioCurso, aula FROM Grado WHERE (idGrado = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@idSeccion" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idSeccion" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@anioCurso" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="anioCurso" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@aula" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="aula" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT idGrado, idSeccion, anioCurso, aula FROM dbo.Grado</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Grado] SET [idSeccion] = @idSeccion, [anioCurso] = @anioCurso, [aula] = @aula WHERE (([idGrado] = @Original_idGrado) AND ([idSeccion] = @Original_idSeccion) AND ([anioCurso] = @Original_anioCurso) AND ([aula] = @Original_aula));
SELECT idGrado, idSeccion, anioCurso, aula FROM Grado WHERE (idGrado = @idGrado)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@idSeccion" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idSeccion" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@anioCurso" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="anioCurso" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@aula" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="aula" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_idGrado" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idGrado" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_idSeccion" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idSeccion" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@Original_anioCurso" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="anioCurso" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_aula" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="aula" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="idGrado" ColumnName="idGrado" DataSourceName="dbGestionNotas.dbo.Grado" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@idGrado" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="idGrado" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="idGrado" DataSetColumn="idGrado" />
              <Mapping SourceColumn="idSeccion" DataSetColumn="idSeccion" />
              <Mapping SourceColumn="anioCurso" DataSetColumn="anioCurso" />
              <Mapping SourceColumn="aula" DataSetColumn="aula" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="dbGestionNotasDataSet6" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_UserDSName="dbGestionNotasDataSet6" msprop:Generator_DataSetName="dbGestionNotasDataSet6">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="Grado" msprop:Generator_RowEvHandlerName="GradoRowChangeEventHandler" msprop:Generator_RowDeletedName="GradoRowDeleted" msprop:Generator_RowDeletingName="GradoRowDeleting" msprop:Generator_RowEvArgName="GradoRowChangeEvent" msprop:Generator_TablePropName="Grado" msprop:Generator_RowChangedName="GradoRowChanged" msprop:Generator_RowChangingName="GradoRowChanging" msprop:Generator_TableClassName="GradoDataTable" msprop:Generator_RowClassName="GradoRow" msprop:Generator_TableVarName="tableGrado" msprop:Generator_UserTableName="Grado">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="idGrado" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnPropNameInRow="idGrado" msprop:Generator_ColumnPropNameInTable="idGradoColumn" msprop:Generator_ColumnVarNameInTable="columnidGrado" msprop:Generator_UserColumnName="idGrado" type="xs:int" />
              <xs:element name="idSeccion" msprop:Generator_ColumnPropNameInRow="idSeccion" msprop:Generator_ColumnPropNameInTable="idSeccionColumn" msprop:Generator_ColumnVarNameInTable="columnidSeccion" msprop:Generator_UserColumnName="idSeccion" type="xs:int" />
              <xs:element name="anioCurso" msprop:Generator_ColumnPropNameInRow="anioCurso" msprop:Generator_ColumnPropNameInTable="anioCursoColumn" msprop:Generator_ColumnVarNameInTable="columnanioCurso" msprop:Generator_UserColumnName="anioCurso" type="xs:dateTime" />
              <xs:element name="aula" msprop:Generator_ColumnPropNameInRow="aula" msprop:Generator_ColumnPropNameInTable="aulaColumn" msprop:Generator_ColumnVarNameInTable="columnaula" msprop:Generator_UserColumnName="aula">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="10" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Grado" />
      <xs:field xpath="mstns:idGrado" />
    </xs:unique>
  </xs:element>
</xs:schema>